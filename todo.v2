
;TODO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  DONE  1. initially show just the visible line to screen
;  DONE  2. but save all line to BANK via fixed records (see start below in the "block" package ...)
;  DOING 3. implement up/down (k/j) and left/right (h/l) so we can get as far as navigating files
;           such that the line shift up or down - or if the line is too long (what's that MAX here?)
;           the line will shift left or right
;  4. OPEN file (:tabedit)
;     * right time to consider tabs? - each file is comfortably saved in each bank
;     * gt (tab right), gT (tab left)
;  5. implement line operations:
;     + yy (yank)
;     + dd (cut)
;     + o  (new line below)
;     + O  (new line above)
;     + p  (paste clipboard buffer below)
;     + P  (paste clipboard buffer above) 
;  6. sort out INSERT mode, REPLACE mode
;  7. SAVE (<ESC>+w, wq, q!)
;  8. Other things
;    * dogfood mode - work on this project inside of the emu,
;    *   - multiple undo
;    *   - temp file auto-save via .swp file  
;    * jump to line N
;    * jump to top
;    * jump to bottom
;    * "transparent" cursor
;    * cycle over different color schemes
;    * multi-line copy/paste ("visual" mode)
;    * elite hacker mode
;        - ability to play music loops for developer flow
;        - support "compile / run" workflow without having to quit for,
;          + BASIC  (PETSCII mode required?) - BASLOAD, etc
;          + PASCAL (PETSCII mode required?) - compiler, run
;          + or suspend/resume via "sysNNNN" - e.g., "ctrl-z"/"fg"
